aggregates:
  AptosFormsDemo2Coin_claimer_1:
    name: AptosFormsDemo2Coin_claimer_1
    id:
      generator:
        class: signer
      conceptual: true
      name: SignerAddress
      type: address
      sequenceNumber: -1
    properties: {}
    methods:
      Claim:
        name: Claim
        metadata: {}
        verificationLogic:
          Move: >
            let aptos_forms_demo2_global_obj = aptos_forms_demo::aptos_forms_demo2_global::get_aptos_forms_demo2_global();
                    let aptos_forms_demo2_global = aptos_forms_demo::aptos_forms_demo2_pass_object::borrow(&aptos_forms_demo2_global_obj);
                    let total_shares = aptos_forms_demo::aptos_forms_demo2_global::coin_claimer_1_total_shares(aptos_forms_demo2_global);
                    let claimed_count = aptos_forms_demo::aptos_forms_demo2_global::coin_claimer_1_claimed_count(aptos_forms_demo2_global);
                    assert!(total_shares > claimed_count, EAllSharesClaimed);
                    let remaining_shares = total_shares - claimed_count;
                    let remaining_amount = aptos_framework::coin::value(aptos_forms_demo::aptos_forms_demo2_global::borrow_coin_claimer_1_vault(aptos_forms_demo2_global));
                    assert!(remaining_amount > 0, EInsufficientFunds);
                    aptos_forms_demo::aptos_forms_demo2_global::return_aptos_forms_demo2_global(aptos_forms_demo2_global_obj);
        mutationLogic:
          Move: >
            {_EXTRACT_EVENT_PROPERTIES_}

            let max_shares = 2;
                    let amount = xrender_form_utils::account_ts_random::random_amount(_account, remaining_amount, remaining_shares, max_shares, 1);
                    let coin_withdrawn = aptos_forms_demo::aptos_forms_demo2_global_aggregate::withdraw_coin_claimer_1_vault(_account, amount);
                    aptos_framework::coin::deposit(std::signer::address_of(_account), coin_withdrawn);
        event:
          name: AptosFormsDemo2Coin_claimer_1_Claimed
          properties:
            RemainingAmount:
              name: RemainingAmount
              type: u64
              sequenceNumber: -1
            RemainingShares:
              name: RemainingShares
              type: u64
              sequenceNumber: -1
        constants:
          EFormNotSubmitted:
            name: EFormNotSubmitted
            constantExpression:
              Move: 101
            type: u64
          EInsufficientFunds:
            name: EInsufficientFunds
            constantExpression:
              Move: 102
            type: u64
          EAllSharesClaimed:
            name: EAllSharesClaimed
            constantExpression:
              Move: 103
            type: u64
    metadata:
      Preprocessors:
      - MOVE_CRUD_IT
      CRUD_IT_NO_DELETE: true
      CRUD_IT_NO_UPDATE: true
      CRUD_IT_CREATE_METHOD_NAME: Claim
enumObjects: {}
singletonObjects:
  AptosFormsDemo2Global:
    name: AptosFormsDemo2Global
    properties:
      Coin_claimer_1_Vault:
        name: Coin_claimer_1_Vault
        type: Coin<APT>
        sequenceNumber: -1
      Coin_claimer_1_TotalShares:
        name: Coin_claimer_1_TotalShares
        defaultLogic:
          Move: 10
        type: u64
        sequenceNumber: -1
      Coin_claimer_1_ClaimedCount:
        name: Coin_claimer_1_ClaimedCount
        defaultLogic:
          Move: 0
        type: u64
        sequenceNumber: -1
    methods:
      DepositCoin_claimer_1_Vault:
        name: DepositCoin_claimer_1_Vault
        parameters:
          Amount:
            name: Amount
            type: u64
            sequenceNumber: -1
        metadata: {}
        verificationLogic:
          Move: >-
            assert!(aptos_framework::coin::balance<aptos_framework::aptos_coin::AptosCoin>(std::signer::address_of(account)) > amount, EInsufficientFunds);
                    aptos_forms_demo2_global::new_coin_claimer_1_vault_deposited(
                        aptos_forms_demo2_global,
                        amount,
                    )
        mutationLogic:
          Move: >-
            let amount_v = aptos_forms_demo2_global::coin_claimer_1_vault_deposited_amount(coin_claimer_1_vault_deposited);
                    let amount = aptos_framework::coin::withdraw<aptos_framework::aptos_coin::AptosCoin>(_account, amount_v);
                    let vault = aptos_forms_demo2_global::borrow_mut_coin_claimer_1_vault(&mut aptos_forms_demo2_global);
                    aptos_framework::coin::merge(vault, amount);
                    aptos_forms_demo2_global
        event:
          name: Coin_claimer_1_VaultDeposited
        constants:
          EInsufficientFunds:
            name: EInsufficientFunds
            constantExpression:
              Move: 101
            type: u64
      WithdrawCoin_claimer_1_Vault:
        name: WithdrawCoin_claimer_1_Vault
        parameters:
          Amount:
            name: Amount
            type: u64
            sequenceNumber: -1
        result:
          type: Coin<APT>
        isInternal: true
        metadata: {}
        verificationLogic:
          Move: >-
            let _ = account;
                    aptos_forms_demo2_global::new_coin_claimer_1_vault_withdrawn(
                        aptos_forms_demo2_global,
                        amount,
                    )
        mutationLogic:
          Move: >-
            let coin_claimer_1_claimed_count = aptos_forms_demo2_global::coin_claimer_1_claimed_count(&aptos_forms_demo2_global);
                    aptos_forms_demo2_global::set_coin_claimer_1_claimed_count(&mut aptos_forms_demo2_global, coin_claimer_1_claimed_count + 1);
                    let amount = aptos_forms_demo2_global::coin_claimer_1_vault_withdrawn_amount(coin_claimer_1_vault_withdrawn);
                    let vault = aptos_forms_demo2_global::borrow_mut_coin_claimer_1_vault(&mut aptos_forms_demo2_global);
                    let w = aptos_framework::coin::extract(vault, amount);
                    (aptos_forms_demo2_global, w)
        event:
          name: Coin_claimer_1_VaultWithdrawn
      AdminWithdrawCoin_claimer_1_Vault:
        name: AdminWithdrawCoin_claimer_1_Vault
        parameters:
          Amount:
            name: Amount
            type: u64
            sequenceNumber: -1
        metadata: {}
        verificationLogic:
          Move: >-
            aptos_forms_demo::aptos_forms_demo2_genesis_account::assert_genesis_account(account);
                    aptos_forms_demo2_global::new_coin_claimer_1_vault_admin_withdrawn(aptos_forms_demo2_global, amount)
        mutationLogic:
          Move: >-
            let amount = aptos_forms_demo2_global::coin_claimer_1_vault_admin_withdrawn_amount(coin_claimer_1_vault_admin_withdrawn);
                    let vault = aptos_forms_demo2_global::borrow_mut_coin_claimer_1_vault(&mut aptos_forms_demo2_global);
                    let w = aptos_framework::coin::extract(vault, amount);
                    aptos_framework::coin::deposit(std::signer::address_of(_account), w);
                    aptos_forms_demo2_global
        event:
          name: Coin_claimer_1_VaultAdminWithdrawn
      __Init__:
        name: __Init__
        metadata: {}
        event:
          name: AptosFormsDemo2GlobalInitialized
    metadata: {}
    friends:
    - AptosFormsDemo2Coin_claimer_1.Claim
configuration:
  defaultUserIdType: string
  defaultTimestampType: OffsetDateTime
  java:
    typeMappings:
      OffsetDateTime: OffsetDateTime
    typePackages:
      OffsetDateTime: java.time
    eventLobPropertiesEnabled: true
    stateLobPropertiesEnabled: true
    noGeneratingMutateStateByEventMethods: true
  move:
    defaultUserIdType: address
    moduleNamePrefix: AptosFormsDemo2
  sequenceNumber: 100
  defaultStringLength: 250
  defaultStringIdLength: 50
  genericTypes: []
  defaultDiscriminatorSuffix: Class
  valueObjectBaseTypes: {}
  sqlTypes: {}
  metadata:
    AlwaysGeneratingEventClobProperties: false
    AlwaysGeneratingClobEventProperties: false
    NO_MOVE_EVENT_MODULE: true
  commandIdName: CommandId
  requesterIdName: RequesterId
  commandContextName: CommandContext
  defaultCommandParameters:
    CommandId:
      name: CommandId
      type: string
      isCommandId: true
      sequenceNumber: -1
    RequesterId:
      name: RequesterId
      type: string
      isRequesterId: true
      sequenceNumber: -1

