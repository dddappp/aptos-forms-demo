// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.test.aptosformsdemo.domain.formdefinition;

import java.time.OffsetDateTime;
import org.test.aptosformsdemo.domain.*;

public class CreateOrMergePatchFormPageDefinitionDto extends AbstractFormPageDefinitionCommandDto implements FormPageDefinitionCommand.CreateOrMergePatchFormPageDefinition {

    /**
     * Page Name
     */
    private String pageName;

    public String getPageName()
    {
        return this.pageName;
    }

    public void setPageName(String pageName)
    {
        this.pageName = pageName;
    }

    /**
     * Move State Table Field Name
     */
    private String moveStateTableFieldName;

    public String getMoveStateTableFieldName()
    {
        return this.moveStateTableFieldName;
    }

    public void setMoveStateTableFieldName(String moveStateTableFieldName)
    {
        this.moveStateTableFieldName = moveStateTableFieldName;
    }

    /**
     * Move State Struct Name
     */
    private String moveStateStructName;

    public String getMoveStateStructName()
    {
        return this.moveStateStructName;
    }

    public void setMoveStateStructName(String moveStateStructName)
    {
        this.moveStateStructName = moveStateStructName;
    }

    /**
     * Move Submit Event Handle Field Name
     */
    private String moveSubmitEventHandleFieldName;

    public String getMoveSubmitEventHandleFieldName()
    {
        return this.moveSubmitEventHandleFieldName;
    }

    public void setMoveSubmitEventHandleFieldName(String moveSubmitEventHandleFieldName)
    {
        this.moveSubmitEventHandleFieldName = moveSubmitEventHandleFieldName;
    }

    /**
     * Move Update Event Handle Field Name
     */
    private String moveUpdateEventHandleFieldName;

    public String getMoveUpdateEventHandleFieldName()
    {
        return this.moveUpdateEventHandleFieldName;
    }

    public void setMoveUpdateEventHandleFieldName(String moveUpdateEventHandleFieldName)
    {
        this.moveUpdateEventHandleFieldName = moveUpdateEventHandleFieldName;
    }

    /**
     * Move Submit Event Struct Name
     */
    private String moveSubmitEventStructName;

    public String getMoveSubmitEventStructName()
    {
        return this.moveSubmitEventStructName;
    }

    public void setMoveSubmitEventStructName(String moveSubmitEventStructName)
    {
        this.moveSubmitEventStructName = moveSubmitEventStructName;
    }

    /**
     * Move Update Event Struct Name
     */
    private String moveUpdateEventStructName;

    public String getMoveUpdateEventStructName()
    {
        return this.moveUpdateEventStructName;
    }

    public void setMoveUpdateEventStructName(String moveUpdateEventStructName)
    {
        this.moveUpdateEventStructName = moveUpdateEventStructName;
    }

    /**
     * Active
     */
    private Boolean active;

    public Boolean getActive()
    {
        return this.active;
    }

    public void setActive(Boolean active)
    {
        this.active = active;
    }


    private Boolean isPropertyPageNameRemoved;

    public Boolean getIsPropertyPageNameRemoved()
    {
        return this.isPropertyPageNameRemoved;
    }

    public void setIsPropertyPageNameRemoved(Boolean removed)
    {
        this.isPropertyPageNameRemoved = removed;
    }

    private Boolean isPropertyMoveStateTableFieldNameRemoved;

    public Boolean getIsPropertyMoveStateTableFieldNameRemoved()
    {
        return this.isPropertyMoveStateTableFieldNameRemoved;
    }

    public void setIsPropertyMoveStateTableFieldNameRemoved(Boolean removed)
    {
        this.isPropertyMoveStateTableFieldNameRemoved = removed;
    }

    private Boolean isPropertyMoveStateStructNameRemoved;

    public Boolean getIsPropertyMoveStateStructNameRemoved()
    {
        return this.isPropertyMoveStateStructNameRemoved;
    }

    public void setIsPropertyMoveStateStructNameRemoved(Boolean removed)
    {
        this.isPropertyMoveStateStructNameRemoved = removed;
    }

    private Boolean isPropertyMoveSubmitEventHandleFieldNameRemoved;

    public Boolean getIsPropertyMoveSubmitEventHandleFieldNameRemoved()
    {
        return this.isPropertyMoveSubmitEventHandleFieldNameRemoved;
    }

    public void setIsPropertyMoveSubmitEventHandleFieldNameRemoved(Boolean removed)
    {
        this.isPropertyMoveSubmitEventHandleFieldNameRemoved = removed;
    }

    private Boolean isPropertyMoveUpdateEventHandleFieldNameRemoved;

    public Boolean getIsPropertyMoveUpdateEventHandleFieldNameRemoved()
    {
        return this.isPropertyMoveUpdateEventHandleFieldNameRemoved;
    }

    public void setIsPropertyMoveUpdateEventHandleFieldNameRemoved(Boolean removed)
    {
        this.isPropertyMoveUpdateEventHandleFieldNameRemoved = removed;
    }

    private Boolean isPropertyMoveSubmitEventStructNameRemoved;

    public Boolean getIsPropertyMoveSubmitEventStructNameRemoved()
    {
        return this.isPropertyMoveSubmitEventStructNameRemoved;
    }

    public void setIsPropertyMoveSubmitEventStructNameRemoved(Boolean removed)
    {
        this.isPropertyMoveSubmitEventStructNameRemoved = removed;
    }

    private Boolean isPropertyMoveUpdateEventStructNameRemoved;

    public Boolean getIsPropertyMoveUpdateEventStructNameRemoved()
    {
        return this.isPropertyMoveUpdateEventStructNameRemoved;
    }

    public void setIsPropertyMoveUpdateEventStructNameRemoved(Boolean removed)
    {
        this.isPropertyMoveUpdateEventStructNameRemoved = removed;
    }

    private Boolean isPropertyActiveRemoved;

    public Boolean getIsPropertyActiveRemoved()
    {
        return this.isPropertyActiveRemoved;
    }

    public void setIsPropertyActiveRemoved(Boolean removed)
    {
        this.isPropertyActiveRemoved = removed;
    }

    public void copyTo(CreateOrMergePatchFormPageDefinition command)
    {
        ((AbstractFormPageDefinitionCommandDto) this).copyTo(command);
        command.setPageName(this.getPageName());
        command.setMoveStateTableFieldName(this.getMoveStateTableFieldName());
        command.setMoveStateStructName(this.getMoveStateStructName());
        command.setMoveSubmitEventHandleFieldName(this.getMoveSubmitEventHandleFieldName());
        command.setMoveUpdateEventHandleFieldName(this.getMoveUpdateEventHandleFieldName());
        command.setMoveSubmitEventStructName(this.getMoveSubmitEventStructName());
        command.setMoveUpdateEventStructName(this.getMoveUpdateEventStructName());
        command.setActive(this.getActive());
    }

    public FormPageDefinitionCommand toCommand()
    {
        if (getCommandType() == null) {
            setCommandType(COMMAND_TYPE_MERGE_PATCH);
        }
        if (COMMAND_TYPE_CREATE.equals(getCommandType())) {
            AbstractFormPageDefinitionCommand.SimpleCreateFormPageDefinition command = new AbstractFormPageDefinitionCommand.SimpleCreateFormPageDefinition();
            copyTo((AbstractFormPageDefinitionCommand.AbstractCreateFormPageDefinition) command);
            return command;
        } else if (COMMAND_TYPE_MERGE_PATCH.equals(getCommandType())) {
            AbstractFormPageDefinitionCommand.SimpleMergePatchFormPageDefinition command = new AbstractFormPageDefinitionCommand.SimpleMergePatchFormPageDefinition();
            copyTo((AbstractFormPageDefinitionCommand.SimpleMergePatchFormPageDefinition) command);
            return command;
        } 
        else if (COMMAND_TYPE_REMOVE.equals(getCommandType())) {
            AbstractFormPageDefinitionCommand.SimpleRemoveFormPageDefinition command = new AbstractFormPageDefinitionCommand.SimpleRemoveFormPageDefinition();
            ((AbstractFormPageDefinitionCommandDto) this).copyTo(command);
            return command;
        }
        throw new UnsupportedOperationException("Unknown command type:" + getCommandType());
    }


    public FormPageDefinitionCommand toSubclass() {
        if (getCommandType() == null) {
            setCommandType(COMMAND_TYPE_MERGE_PATCH);
        }
        if (COMMAND_TYPE_CREATE.equals(getCommandType()) || null == getCommandType()) {
            CreateFormPageDefinitionDto command = new CreateFormPageDefinitionDto();
            copyTo((CreateFormPageDefinition) command);
            return command;
        } else if (COMMAND_TYPE_MERGE_PATCH.equals(getCommandType())) {
            MergePatchFormPageDefinitionDto command = new MergePatchFormPageDefinitionDto();
            copyTo((MergePatchFormPageDefinition) command);
            return command;
        } 
        else if (COMMAND_TYPE_REMOVE.equals(getCommandType())) {
            RemoveFormPageDefinitionDto command = new RemoveFormPageDefinitionDto();
            ((AbstractFormPageDefinitionCommandDto) this).copyTo(command);
            return command;
        }
        throw new UnsupportedOperationException("Unknown command type:" + getCommandType());
    }

    public void copyTo(CreateFormPageDefinition command)
    {
        copyTo((CreateOrMergePatchFormPageDefinition) command);
    }

    public void copyTo(MergePatchFormPageDefinition command)
    {
        copyTo((CreateOrMergePatchFormPageDefinition) command);
        command.setIsPropertyPageNameRemoved(this.getIsPropertyPageNameRemoved());
        command.setIsPropertyMoveStateTableFieldNameRemoved(this.getIsPropertyMoveStateTableFieldNameRemoved());
        command.setIsPropertyMoveStateStructNameRemoved(this.getIsPropertyMoveStateStructNameRemoved());
        command.setIsPropertyMoveSubmitEventHandleFieldNameRemoved(this.getIsPropertyMoveSubmitEventHandleFieldNameRemoved());
        command.setIsPropertyMoveUpdateEventHandleFieldNameRemoved(this.getIsPropertyMoveUpdateEventHandleFieldNameRemoved());
        command.setIsPropertyMoveSubmitEventStructNameRemoved(this.getIsPropertyMoveSubmitEventStructNameRemoved());
        command.setIsPropertyMoveUpdateEventStructNameRemoved(this.getIsPropertyMoveUpdateEventStructNameRemoved());
        command.setIsPropertyActiveRemoved(this.getIsPropertyActiveRemoved());
    }

    public static class CreateFormPageDefinitionDto extends CreateOrMergePatchFormPageDefinitionDto implements FormPageDefinitionCommand.CreateFormPageDefinition
    {
        public CreateFormPageDefinitionDto() {
            this.commandType = COMMAND_TYPE_CREATE;
        }

        @Override
        public String getCommandType() {
            return COMMAND_TYPE_CREATE;
        }
        public FormPageDefinitionCommand.CreateFormPageDefinition toCreateFormPageDefinition()
        {
            return (FormPageDefinitionCommand.CreateFormPageDefinition) toCommand();
        }

    }

    public static class MergePatchFormPageDefinitionDto extends CreateOrMergePatchFormPageDefinitionDto implements FormPageDefinitionCommand.MergePatchFormPageDefinition
    {
        public MergePatchFormPageDefinitionDto() {
            this.commandType = COMMAND_TYPE_MERGE_PATCH;
        }

        @Override
        public String getCommandType() {
            return COMMAND_TYPE_MERGE_PATCH;
        }
        public FormPageDefinitionCommand.MergePatchFormPageDefinition toMergePatchFormPageDefinition()
        {
            return (FormPageDefinitionCommand.MergePatchFormPageDefinition) toCommand();
        }

    }

}

