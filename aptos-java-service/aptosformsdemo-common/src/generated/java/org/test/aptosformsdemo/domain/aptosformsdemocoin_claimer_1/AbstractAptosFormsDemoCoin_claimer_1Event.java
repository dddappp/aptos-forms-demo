// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.test.aptosformsdemo.domain.aptosformsdemocoin_claimer_1;

import java.util.*;
import org.test.aptosformsdemo.domain.*;
import java.math.BigInteger;
import java.time.OffsetDateTime;
import org.test.aptosformsdemo.specialization.*;
import org.test.aptosformsdemo.domain.AbstractEvent;

public abstract class AbstractAptosFormsDemoCoin_claimer_1Event extends AbstractEvent implements AptosFormsDemoCoin_claimer_1Event.SqlAptosFormsDemoCoin_claimer_1Event, AptosEvent.MutableAptosEvent, HasStatus.MutableHasStatus {
    private AptosFormsDemoCoin_claimer_1EventId aptosFormsDemoCoin_claimer_1EventId = new AptosFormsDemoCoin_claimer_1EventId();

    public AptosFormsDemoCoin_claimer_1EventId getAptosFormsDemoCoin_claimer_1EventId() {
        return this.aptosFormsDemoCoin_claimer_1EventId;
    }

    public void setAptosFormsDemoCoin_claimer_1EventId(AptosFormsDemoCoin_claimer_1EventId eventId) {
        this.aptosFormsDemoCoin_claimer_1EventId = eventId;
    }
    
    public FormPageAndAddress getFormPageAndSignerAddress() {
        return getAptosFormsDemoCoin_claimer_1EventId().getFormPageAndSignerAddress();
    }

    public void setFormPageAndSignerAddress(FormPageAndAddress formPageAndSignerAddress) {
        getAptosFormsDemoCoin_claimer_1EventId().setFormPageAndSignerAddress(formPageAndSignerAddress);
    }

    private boolean eventReadOnly;

    public boolean getEventReadOnly() { return this.eventReadOnly; }

    public void setEventReadOnly(boolean readOnly) { this.eventReadOnly = readOnly; }

    public BigInteger getVersion() {
        return getAptosFormsDemoCoin_claimer_1EventId().getVersion();
    }
    
    public void setVersion(BigInteger version) {
        getAptosFormsDemoCoin_claimer_1EventId().setVersion(version);
    }

    private BigInteger aptosEventVersion;

    public BigInteger getAptosEventVersion() {
        return this.aptosEventVersion;
    }
    
    public void setAptosEventVersion(BigInteger aptosEventVersion) {
        this.aptosEventVersion = aptosEventVersion;
    }

    private BigInteger aptosEventSequenceNumber;

    public BigInteger getAptosEventSequenceNumber() {
        return this.aptosEventSequenceNumber;
    }
    
    public void setAptosEventSequenceNumber(BigInteger aptosEventSequenceNumber) {
        this.aptosEventSequenceNumber = aptosEventSequenceNumber;
    }

    private String aptosEventType;

    public String getAptosEventType() {
        return this.aptosEventType;
    }
    
    public void setAptosEventType(String aptosEventType) {
        this.aptosEventType = aptosEventType;
    }

    private AptosEventGuid aptosEventGuid;

    public AptosEventGuid getAptosEventGuid() {
        return this.aptosEventGuid;
    }
    
    public void setAptosEventGuid(AptosEventGuid aptosEventGuid) {
        this.aptosEventGuid = aptosEventGuid;
    }

    private String status;

    public String getStatus() {
        return this.status;
    }
    
    public void setStatus(String status) {
        this.status = status;
    }

    private String createdBy;

    public String getCreatedBy() {
        return this.createdBy;
    }

    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    private OffsetDateTime createdAt;

    public OffsetDateTime getCreatedAt() {
        return this.createdAt;
    }

    public void setCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
    }


    private String commandId;

    public String getCommandId() {
        return commandId;
    }

    public void setCommandId(String commandId) {
        this.commandId = commandId;
    }

    private String commandType;

    public String getCommandType() {
        return commandType;
    }

    public void setCommandType(String commandType) {
        this.commandType = commandType;
    }

    protected AbstractAptosFormsDemoCoin_claimer_1Event() {
    }

    protected AbstractAptosFormsDemoCoin_claimer_1Event(AptosFormsDemoCoin_claimer_1EventId eventId) {
        this.aptosFormsDemoCoin_claimer_1EventId = eventId;
    }


    public abstract String getEventClass();

    public static class AptosFormsDemoCoin_claimer_1LobEvent extends AbstractAptosFormsDemoCoin_claimer_1Event {

        public Map<String, Object> getDynamicProperties() {
            return dynamicProperties;
        }

        public void setDynamicProperties(Map<String, Object> dynamicProperties) {
            if (dynamicProperties == null) {
                throw new IllegalArgumentException("dynamicProperties is null.");
            }
            this.dynamicProperties = dynamicProperties;
        }

        private Map<String, Object> dynamicProperties = new HashMap<>();

        @Override
        public String getEventClass() {
            return "AptosFormsDemoCoin_claimer_1LobEvent";
        }

    }

    public static class AptosFormsDemoCoin_claimer_1_Claimed extends AptosFormsDemoCoin_claimer_1LobEvent implements AptosFormsDemoCoin_claimer_1Event.AptosFormsDemoCoin_claimer_1_Claimed {

        @Override
        public String getEventClass() {
            return "AptosFormsDemoCoin_claimer_1_Claimed";
        }

        public BigInteger getRemainingAmount() {
            Object val = getDynamicProperties().get("remainingAmount");
            if (val instanceof BigInteger) {
                return (BigInteger) val;
            }
            return ApplicationContext.current.getTypeConverter().convertValue(val, BigInteger.class);
        }

        public void setRemainingAmount(BigInteger value) {
            getDynamicProperties().put("remainingAmount", value);
        }

        public BigInteger getRemainingShares() {
            Object val = getDynamicProperties().get("remainingShares");
            if (val instanceof BigInteger) {
                return (BigInteger) val;
            }
            return ApplicationContext.current.getTypeConverter().convertValue(val, BigInteger.class);
        }

        public void setRemainingShares(BigInteger value) {
            getDynamicProperties().put("remainingShares", value);
        }

    }


}

