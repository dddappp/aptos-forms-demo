// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.test.aptosformsdemo.domain.formdefinition;

import java.util.*;
import java.time.OffsetDateTime;
import org.test.aptosformsdemo.domain.*;
import org.test.aptosformsdemo.domain.AbstractCommand;

public abstract class AbstractFormDefinitionCommand extends AbstractCommand implements FormDefinitionCommand {

    private Long formSequenceId;

    public Long getFormSequenceId()
    {
        return this.formSequenceId;
    }

    public void setFormSequenceId(Long formSequenceId)
    {
        this.formSequenceId = formSequenceId;
    }

    private Long offChainVersion;

    public Long getOffChainVersion()
    {
        return this.offChainVersion;
    }

    public void setOffChainVersion(Long offChainVersion)
    {
        this.offChainVersion = offChainVersion;
    }


    public static abstract class AbstractCreateOrMergePatchFormDefinition extends AbstractFormDefinitionCommand implements CreateOrMergePatchFormDefinition
    {

        private String formId;

        public String getFormId()
        {
            return this.formId;
        }

        public void setFormId(String formId)
        {
            this.formId = formId;
        }

        private String contractAddress;

        public String getContractAddress()
        {
            return this.contractAddress;
        }

        public void setContractAddress(String contractAddress)
        {
            this.contractAddress = contractAddress;
        }

        private String storeAccountAddress;

        public String getStoreAccountAddress()
        {
            return this.storeAccountAddress;
        }

        public void setStoreAccountAddress(String storeAccountAddress)
        {
            this.storeAccountAddress = storeAccountAddress;
        }

        private Boolean active;

        public Boolean getActive()
        {
            return this.active;
        }

        public void setActive(Boolean active)
        {
            this.active = active;
        }

        public FormPageDefinitionCommand.CreateFormPageDefinition newCreateFormPageDefinition()
        {
            AbstractFormPageDefinitionCommand.SimpleCreateFormPageDefinition c = new AbstractFormPageDefinitionCommand.SimpleCreateFormPageDefinition();
            c.setFormDefinitionFormSequenceId(this.getFormSequenceId());

            return c;
        }

        public FormPageDefinitionCommand.MergePatchFormPageDefinition newMergePatchFormPageDefinition()
        {
            AbstractFormPageDefinitionCommand.SimpleMergePatchFormPageDefinition c = new AbstractFormPageDefinitionCommand.SimpleMergePatchFormPageDefinition();
            c.setFormDefinitionFormSequenceId(this.getFormSequenceId());

            return c;
        }

        public FormPageDefinitionCommand.RemoveFormPageDefinition newRemoveFormPageDefinition()
        {
            AbstractFormPageDefinitionCommand.SimpleRemoveFormPageDefinition c = new AbstractFormPageDefinitionCommand.SimpleRemoveFormPageDefinition();
            c.setFormDefinitionFormSequenceId(this.getFormSequenceId());

            return c;
        }

    }

    public static abstract class AbstractCreateFormDefinition extends AbstractCreateOrMergePatchFormDefinition implements CreateFormDefinition
    {
        @Override
        public String getCommandType() {
            return COMMAND_TYPE_CREATE;
        }

        private CreateFormPageDefinitionCommandCollection createFormPageDefinitionCommands = new SimpleCreateFormPageDefinitionCommandCollection();

        public CreateFormPageDefinitionCommandCollection getCreateFormPageDefinitionCommands() {
            return this.createFormPageDefinitionCommands;
        }

        public CreateFormPageDefinitionCommandCollection getPageDefinitions() {
            return this.createFormPageDefinitionCommands; //pageDefinitions;
        }

    }

    public static abstract class AbstractMergePatchFormDefinition extends AbstractCreateOrMergePatchFormDefinition implements MergePatchFormDefinition
    {
        @Override
        public String getCommandType() {
            return COMMAND_TYPE_MERGE_PATCH;
        }

        private Boolean isPropertyFormIdRemoved;

        public Boolean getIsPropertyFormIdRemoved()
        {
            return this.isPropertyFormIdRemoved;
        }

        public void setIsPropertyFormIdRemoved(Boolean removed)
        {
            this.isPropertyFormIdRemoved = removed;
        }

        private Boolean isPropertyContractAddressRemoved;

        public Boolean getIsPropertyContractAddressRemoved()
        {
            return this.isPropertyContractAddressRemoved;
        }

        public void setIsPropertyContractAddressRemoved(Boolean removed)
        {
            this.isPropertyContractAddressRemoved = removed;
        }

        private Boolean isPropertyStoreAccountAddressRemoved;

        public Boolean getIsPropertyStoreAccountAddressRemoved()
        {
            return this.isPropertyStoreAccountAddressRemoved;
        }

        public void setIsPropertyStoreAccountAddressRemoved(Boolean removed)
        {
            this.isPropertyStoreAccountAddressRemoved = removed;
        }

        private Boolean isPropertyActiveRemoved;

        public Boolean getIsPropertyActiveRemoved()
        {
            return this.isPropertyActiveRemoved;
        }

        public void setIsPropertyActiveRemoved(Boolean removed)
        {
            this.isPropertyActiveRemoved = removed;
        }


        private FormPageDefinitionCommandCollection formPageDefinitionCommands = new SimpleFormPageDefinitionCommandCollection();

        public FormPageDefinitionCommandCollection getFormPageDefinitionCommands()
        {
            return this.formPageDefinitionCommands;
        }

    }

    public static class SimpleCreateFormDefinition extends AbstractCreateFormDefinition
    {
    }

    
    public static class SimpleMergePatchFormDefinition extends AbstractMergePatchFormDefinition
    {
    }

    
    public static class SimpleDeleteFormDefinition extends AbstractFormDefinitionCommand implements DeleteFormDefinition
    {
        @Override
        public String getCommandType() {
            return COMMAND_TYPE_DELETE;
        }
    }

    
    public static class SimpleCreateFormPageDefinitionCommandCollection implements CreateFormPageDefinitionCommandCollection {
        private List<FormPageDefinitionCommand.CreateFormPageDefinition> innerCommands = new ArrayList<FormPageDefinitionCommand.CreateFormPageDefinition>();

        public void add(FormPageDefinitionCommand.CreateFormPageDefinition c) {
            innerCommands.add(c);
        }

        public void remove(FormPageDefinitionCommand.CreateFormPageDefinition c) {
            innerCommands.remove(c);
        }

        public void clear() {
            innerCommands.clear();
        }

        @Override
        public Iterator<FormPageDefinitionCommand.CreateFormPageDefinition> iterator() {
            return innerCommands.iterator();
        }
    }

    public static class SimpleFormPageDefinitionCommandCollection implements FormPageDefinitionCommandCollection {
        private List<FormPageDefinitionCommand> innerCommands = new ArrayList<FormPageDefinitionCommand>();

        public void add(FormPageDefinitionCommand c) {
            innerCommands.add(c);
        }

        public void remove(FormPageDefinitionCommand c) {
            innerCommands.remove(c);
        }

        public void clear() {
            innerCommands.clear();
        }

        @Override
        public Iterator<FormPageDefinitionCommand> iterator() {
            return innerCommands.iterator();
        }
    }


}

