// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.test.aptosformsdemo.domain.formdefinition;

import java.math.BigInteger;
import java.time.OffsetDateTime;
import org.test.aptosformsdemo.domain.*;

public class CreateOrMergePatchFormDefinitionDto extends AbstractFormDefinitionCommandDto implements FormDefinitionCommand.CreateOrMergePatchFormDefinition {

    /**
     * Form Id
     */
    private String formId;

    public String getFormId()
    {
        return this.formId;
    }

    public void setFormId(String formId)
    {
        this.formId = formId;
    }

    /**
     * Contract Address
     */
    private String contractAddress;

    public String getContractAddress()
    {
        return this.contractAddress;
    }

    public void setContractAddress(String contractAddress)
    {
        this.contractAddress = contractAddress;
    }

    /**
     * Store Account Address
     */
    private String storeAccountAddress;

    public String getStoreAccountAddress()
    {
        return this.storeAccountAddress;
    }

    public void setStoreAccountAddress(String storeAccountAddress)
    {
        this.storeAccountAddress = storeAccountAddress;
    }

    /**
     * Start Page Name
     */
    private String startPageName;

    public String getStartPageName()
    {
        return this.startPageName;
    }

    public void setStartPageName(String startPageName)
    {
        this.startPageName = startPageName;
    }

    /**
     * Version
     */
    private BigInteger version;

    public BigInteger getVersion()
    {
        return this.version;
    }

    public void setVersion(BigInteger version)
    {
        this.version = version;
    }

    /**
     * Active
     */
    private Boolean active;

    public Boolean getActive()
    {
        return this.active;
    }

    public void setActive(Boolean active)
    {
        this.active = active;
    }


    private Boolean isPropertyFormIdRemoved;

    public Boolean getIsPropertyFormIdRemoved()
    {
        return this.isPropertyFormIdRemoved;
    }

    public void setIsPropertyFormIdRemoved(Boolean removed)
    {
        this.isPropertyFormIdRemoved = removed;
    }

    private Boolean isPropertyContractAddressRemoved;

    public Boolean getIsPropertyContractAddressRemoved()
    {
        return this.isPropertyContractAddressRemoved;
    }

    public void setIsPropertyContractAddressRemoved(Boolean removed)
    {
        this.isPropertyContractAddressRemoved = removed;
    }

    private Boolean isPropertyStoreAccountAddressRemoved;

    public Boolean getIsPropertyStoreAccountAddressRemoved()
    {
        return this.isPropertyStoreAccountAddressRemoved;
    }

    public void setIsPropertyStoreAccountAddressRemoved(Boolean removed)
    {
        this.isPropertyStoreAccountAddressRemoved = removed;
    }

    private Boolean isPropertyStartPageNameRemoved;

    public Boolean getIsPropertyStartPageNameRemoved()
    {
        return this.isPropertyStartPageNameRemoved;
    }

    public void setIsPropertyStartPageNameRemoved(Boolean removed)
    {
        this.isPropertyStartPageNameRemoved = removed;
    }

    private Boolean isPropertyVersionRemoved;

    public Boolean getIsPropertyVersionRemoved()
    {
        return this.isPropertyVersionRemoved;
    }

    public void setIsPropertyVersionRemoved(Boolean removed)
    {
        this.isPropertyVersionRemoved = removed;
    }

    private Boolean isPropertyActiveRemoved;

    public Boolean getIsPropertyActiveRemoved()
    {
        return this.isPropertyActiveRemoved;
    }

    public void setIsPropertyActiveRemoved(Boolean removed)
    {
        this.isPropertyActiveRemoved = removed;
    }

    public void copyTo(CreateOrMergePatchFormDefinition command)
    {
        ((AbstractFormDefinitionCommandDto) this).copyTo(command);
        command.setFormId(this.getFormId());
        command.setContractAddress(this.getContractAddress());
        command.setStoreAccountAddress(this.getStoreAccountAddress());
        command.setStartPageName(this.getStartPageName());
        command.setVersion(this.getVersion());
        command.setActive(this.getActive());
    }

    public FormDefinitionCommand toCommand()
    {
        if (getCommandType() == null) {
            setCommandType(COMMAND_TYPE_MERGE_PATCH);
        }
        if (COMMAND_TYPE_CREATE.equals(getCommandType())) {
            AbstractFormDefinitionCommand.SimpleCreateFormDefinition command = new AbstractFormDefinitionCommand.SimpleCreateFormDefinition();
            copyTo((AbstractFormDefinitionCommand.AbstractCreateFormDefinition) command);
            return command;
        } else if (COMMAND_TYPE_MERGE_PATCH.equals(getCommandType())) {
            AbstractFormDefinitionCommand.SimpleMergePatchFormDefinition command = new AbstractFormDefinitionCommand.SimpleMergePatchFormDefinition();
            copyTo((AbstractFormDefinitionCommand.SimpleMergePatchFormDefinition) command);
            return command;
        } 
        throw new UnsupportedOperationException("Unknown command type:" + getCommandType());
    }


    public FormDefinitionCommand toSubclass() {
        if (getCommandType() == null) {
            setCommandType(COMMAND_TYPE_MERGE_PATCH);
        }
        if (COMMAND_TYPE_CREATE.equals(getCommandType()) || null == getCommandType()) {
            CreateFormDefinitionDto command = new CreateFormDefinitionDto();
            copyTo((CreateFormDefinition) command);
            return command;
        } else if (COMMAND_TYPE_MERGE_PATCH.equals(getCommandType())) {
            MergePatchFormDefinitionDto command = new MergePatchFormDefinitionDto();
            copyTo((MergePatchFormDefinition) command);
            return command;
        } 
        throw new UnsupportedOperationException("Unknown command type:" + getCommandType());
    }

    public void copyTo(CreateFormDefinition command)
    {
        copyTo((CreateOrMergePatchFormDefinition) command);
    }

    public void copyTo(MergePatchFormDefinition command)
    {
        copyTo((CreateOrMergePatchFormDefinition) command);
        command.setIsPropertyFormIdRemoved(this.getIsPropertyFormIdRemoved());
        command.setIsPropertyContractAddressRemoved(this.getIsPropertyContractAddressRemoved());
        command.setIsPropertyStoreAccountAddressRemoved(this.getIsPropertyStoreAccountAddressRemoved());
        command.setIsPropertyStartPageNameRemoved(this.getIsPropertyStartPageNameRemoved());
        command.setIsPropertyVersionRemoved(this.getIsPropertyVersionRemoved());
        command.setIsPropertyActiveRemoved(this.getIsPropertyActiveRemoved());
    }

    public static class CreateFormDefinitionDto extends CreateOrMergePatchFormDefinitionDto implements FormDefinitionCommand.CreateFormDefinition
    {
        public CreateFormDefinitionDto() {
            this.commandType = COMMAND_TYPE_CREATE;
        }

        @Override
        public String getCommandType() {
            return COMMAND_TYPE_CREATE;
        }
        public FormDefinitionCommand.CreateFormDefinition toCreateFormDefinition()
        {
            return (FormDefinitionCommand.CreateFormDefinition) toCommand();
        }

    }

    public static class MergePatchFormDefinitionDto extends CreateOrMergePatchFormDefinitionDto implements FormDefinitionCommand.MergePatchFormDefinition
    {
        public MergePatchFormDefinitionDto() {
            this.commandType = COMMAND_TYPE_MERGE_PATCH;
        }

        @Override
        public String getCommandType() {
            return COMMAND_TYPE_MERGE_PATCH;
        }
        public FormDefinitionCommand.MergePatchFormDefinition toMergePatchFormDefinition()
        {
            return (FormDefinitionCommand.MergePatchFormDefinition) toCommand();
        }

    }

}

