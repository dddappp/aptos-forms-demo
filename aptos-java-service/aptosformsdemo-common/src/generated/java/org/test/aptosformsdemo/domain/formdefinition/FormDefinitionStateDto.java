// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.test.aptosformsdemo.domain.formdefinition;

import java.util.*;
import java.math.*;
import java.math.BigInteger;
import java.time.OffsetDateTime;
import org.test.aptosformsdemo.domain.*;
import org.test.aptosformsdemo.specialization.*;


public class FormDefinitionStateDto {

    private Long formSequenceId;

    public Long getFormSequenceId()
    {
        return this.formSequenceId;
    }

    public void setFormSequenceId(Long formSequenceId)
    {
        this.formSequenceId = formSequenceId;
    }

    private String formId;

    public String getFormId()
    {
        return this.formId;
    }

    public void setFormId(String formId)
    {
        this.formId = formId;
    }

    private String contractAddress;

    public String getContractAddress()
    {
        return this.contractAddress;
    }

    public void setContractAddress(String contractAddress)
    {
        this.contractAddress = contractAddress;
    }

    private String storeAccountAddress;

    public String getStoreAccountAddress()
    {
        return this.storeAccountAddress;
    }

    public void setStoreAccountAddress(String storeAccountAddress)
    {
        this.storeAccountAddress = storeAccountAddress;
    }

    private BigInteger version;

    public BigInteger getVersion()
    {
        return this.version;
    }

    public void setVersion(BigInteger version)
    {
        this.version = version;
    }

    private Boolean active;

    public Boolean getActive()
    {
        return this.active;
    }

    public void setActive(Boolean active)
    {
        this.active = active;
    }

    private Long offChainVersion;

    public Long getOffChainVersion()
    {
        return this.offChainVersion;
    }

    public void setOffChainVersion(Long offChainVersion)
    {
        this.offChainVersion = offChainVersion;
    }

    private String createdBy;

    public String getCreatedBy()
    {
        return this.createdBy;
    }

    public void setCreatedBy(String createdBy)
    {
        this.createdBy = createdBy;
    }

    private OffsetDateTime createdAt;

    public OffsetDateTime getCreatedAt()
    {
        return this.createdAt;
    }

    public void setCreatedAt(OffsetDateTime createdAt)
    {
        this.createdAt = createdAt;
    }

    private String updatedBy;

    public String getUpdatedBy()
    {
        return this.updatedBy;
    }

    public void setUpdatedBy(String updatedBy)
    {
        this.updatedBy = updatedBy;
    }

    private OffsetDateTime updatedAt;

    public OffsetDateTime getUpdatedAt()
    {
        return this.updatedAt;
    }

    public void setUpdatedAt(OffsetDateTime updatedAt)
    {
        this.updatedAt = updatedAt;
    }

    private FormPageDefinitionStateDto[] pageDefinitions;

    public FormPageDefinitionStateDto[] getPageDefinitions()
    {
        return this.pageDefinitions;
    }    

    public void setPageDefinitions(FormPageDefinitionStateDto[] pageDefinitions)
    {
        this.pageDefinitions = pageDefinitions;
    }


    public static class DtoConverter extends AbstractStateDtoConverter
    {
        public static Collection<String> collectionFieldNames = Arrays.asList(new String[]{"PageDefinitions"});

        @Override
        protected boolean isCollectionField(String fieldName) {
            return CollectionUtils.collectionContainsIgnoringCase(collectionFieldNames, fieldName);
        }

        public FormDefinitionStateDto[] toFormDefinitionStateDtoArray(Iterable<FormDefinitionState> states) {
            return toFormDefinitionStateDtoList(states).toArray(new FormDefinitionStateDto[0]);
        }

        public List<FormDefinitionStateDto> toFormDefinitionStateDtoList(Iterable<FormDefinitionState> states) {
            ArrayList<FormDefinitionStateDto> stateDtos = new ArrayList();
            for (FormDefinitionState s : states) {
                FormDefinitionStateDto dto = toFormDefinitionStateDto(s);
                stateDtos.add(dto);
            }
            return stateDtos;
        }

        public FormDefinitionStateDto toFormDefinitionStateDto(FormDefinitionState state)
        {
            if(state == null) {
                return null;
            }
            FormDefinitionStateDto dto = new FormDefinitionStateDto();
            if (returnedFieldsContains("FormSequenceId")) {
                dto.setFormSequenceId(state.getFormSequenceId());
            }
            if (returnedFieldsContains("FormId")) {
                dto.setFormId(state.getFormId());
            }
            if (returnedFieldsContains("ContractAddress")) {
                dto.setContractAddress(state.getContractAddress());
            }
            if (returnedFieldsContains("StoreAccountAddress")) {
                dto.setStoreAccountAddress(state.getStoreAccountAddress());
            }
            if (returnedFieldsContains("Version")) {
                dto.setVersion(state.getVersion());
            }
            if (returnedFieldsContains("Active")) {
                dto.setActive(state.getActive());
            }
            if (returnedFieldsContains("OffChainVersion")) {
                dto.setOffChainVersion(state.getOffChainVersion());
            }
            if (returnedFieldsContains("CreatedBy")) {
                dto.setCreatedBy(state.getCreatedBy());
            }
            if (returnedFieldsContains("CreatedAt")) {
                dto.setCreatedAt(state.getCreatedAt());
            }
            if (returnedFieldsContains("UpdatedBy")) {
                dto.setUpdatedBy(state.getUpdatedBy());
            }
            if (returnedFieldsContains("UpdatedAt")) {
                dto.setUpdatedAt(state.getUpdatedAt());
            }
            if (returnedFieldsContains("PageDefinitions")) {
                ArrayList<FormPageDefinitionStateDto> arrayList = new ArrayList();
                if (state.getPageDefinitions() != null) {
                    FormPageDefinitionStateDto.DtoConverter conv = new FormPageDefinitionStateDto.DtoConverter();
                    String returnFS = CollectionUtils.mapGetValueIgnoringCase(getReturnedFields(), "PageDefinitions");
                    if(returnFS != null) { conv.setReturnedFieldsString(returnFS); } else { conv.setAllFieldsReturned(this.getAllFieldsReturned()); }
                    for (FormPageDefinitionState s : state.getPageDefinitions()) {
                        arrayList.add(conv.toFormPageDefinitionStateDto(s));
                    }
                }
                dto.setPageDefinitions(arrayList.toArray(new FormPageDefinitionStateDto[0]));
            }
            return dto;
        }

    }
}

