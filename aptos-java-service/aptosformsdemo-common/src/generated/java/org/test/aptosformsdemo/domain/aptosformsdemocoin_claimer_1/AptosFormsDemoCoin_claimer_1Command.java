// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.test.aptosformsdemo.domain.aptosformsdemocoin_claimer_1;

import java.util.*;
import org.test.aptosformsdemo.domain.*;
import java.math.BigInteger;
import java.time.OffsetDateTime;
import org.test.aptosformsdemo.domain.Command;
import org.test.aptosformsdemo.specialization.DomainError;

public interface AptosFormsDemoCoin_claimer_1Command extends Command {

    FormPageAndAddress getFormPageAndSignerAddress();

    void setFormPageAndSignerAddress(FormPageAndAddress formPageAndSignerAddress);

    Long getOffChainVersion();

    void setOffChainVersion(Long offChainVersion);

    static void throwOnInvalidStateTransition(AptosFormsDemoCoin_claimer_1State state, Command c) {
        if (state.getOffChainVersion() == null) {
            if (isCreationCommand((AptosFormsDemoCoin_claimer_1Command)c)) {
                return;
            }
            throw DomainError.named("premature", "Can't do anything to unexistent aggregate");
        }
        if (state.getDeleted() != null && state.getDeleted()) {
            throw DomainError.named("zombie", "Can't do anything to deleted aggregate.");
        }
        if (isCreationCommand((AptosFormsDemoCoin_claimer_1Command)c))
            throw DomainError.named("rebirth", "Can't create aggregate that already exists");
    }

    static boolean isCreationCommand(AptosFormsDemoCoin_claimer_1Command c) {
        if (c.getCommandType() != null) {
            String commandType = c.getCommandType();
            if (commandType.equals("Claim"))
                return true;
        }

        if (c.getOffChainVersion().equals(AptosFormsDemoCoin_claimer_1State.VERSION_NULL))
            return true;
        return false;
    }

}

