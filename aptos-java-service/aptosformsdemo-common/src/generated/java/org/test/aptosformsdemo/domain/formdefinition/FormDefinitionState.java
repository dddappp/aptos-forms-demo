// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.test.aptosformsdemo.domain.formdefinition;

import java.util.*;
import java.math.*;
import java.math.BigInteger;
import java.time.OffsetDateTime;
import org.test.aptosformsdemo.domain.*;
import org.test.aptosformsdemo.specialization.Event;

public interface FormDefinitionState extends VersionedAptosMoveObject
{
    Long VERSION_ZERO = 0L;

    Long VERSION_NULL = VERSION_ZERO - 1;

    Long getFormSequenceId();

    String getFormId();

    String getContractAddress();

    String getStoreAccountAddress();

    Long getOffChainVersion();

    String getCreatedBy();

    OffsetDateTime getCreatedAt();

    String getUpdatedBy();

    OffsetDateTime getUpdatedAt();

    Boolean getActive();

    Boolean getDeleted();

    EntityStateCollection<Integer, FormPageDefinitionState> getPageDefinitions();

    interface MutableFormDefinitionState extends FormDefinitionState, VersionedAptosMoveObject.MutableVersionedAptosMoveObject {
        void setFormSequenceId(Long formSequenceId);

        void setFormId(String formId);

        void setContractAddress(String contractAddress);

        void setStoreAccountAddress(String storeAccountAddress);

        void setOffChainVersion(Long offChainVersion);

        void setCreatedBy(String createdBy);

        void setCreatedAt(OffsetDateTime createdAt);

        void setUpdatedBy(String updatedBy);

        void setUpdatedAt(OffsetDateTime updatedAt);

        void setActive(Boolean active);

        void setDeleted(Boolean deleted);


        void mutate(Event e);

        //void when(FormDefinitionEvent.FormDefinitionStateCreated e);

        //void when(FormDefinitionEvent.FormDefinitionStateMergePatched e);

        //void when(FormDefinitionEvent.FormDefinitionStateDeleted e);
    }

    interface SqlFormDefinitionState extends MutableFormDefinitionState {

        boolean isStateUnsaved();

        boolean getForReapplying();
    }
}

