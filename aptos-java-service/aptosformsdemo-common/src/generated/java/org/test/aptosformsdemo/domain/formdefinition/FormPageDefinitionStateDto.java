// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.test.aptosformsdemo.domain.formdefinition;

import java.util.*;
import java.math.*;
import java.time.OffsetDateTime;
import org.test.aptosformsdemo.domain.*;
import org.test.aptosformsdemo.specialization.*;


public class FormPageDefinitionStateDto {

    private Integer pageNumber;

    public Integer getPageNumber()
    {
        return this.pageNumber;
    }

    public void setPageNumber(Integer pageNumber)
    {
        this.pageNumber = pageNumber;
    }

    private String pageName;

    public String getPageName()
    {
        return this.pageName;
    }

    public void setPageName(String pageName)
    {
        this.pageName = pageName;
    }

    private String moveStateTableFieldName;

    public String getMoveStateTableFieldName()
    {
        return this.moveStateTableFieldName;
    }

    public void setMoveStateTableFieldName(String moveStateTableFieldName)
    {
        this.moveStateTableFieldName = moveStateTableFieldName;
    }

    private String moveStateStructName;

    public String getMoveStateStructName()
    {
        return this.moveStateStructName;
    }

    public void setMoveStateStructName(String moveStateStructName)
    {
        this.moveStateStructName = moveStateStructName;
    }

    private String moveSubmitEventHandleFieldName;

    public String getMoveSubmitEventHandleFieldName()
    {
        return this.moveSubmitEventHandleFieldName;
    }

    public void setMoveSubmitEventHandleFieldName(String moveSubmitEventHandleFieldName)
    {
        this.moveSubmitEventHandleFieldName = moveSubmitEventHandleFieldName;
    }

    private String moveUpdateEventHandleFieldName;

    public String getMoveUpdateEventHandleFieldName()
    {
        return this.moveUpdateEventHandleFieldName;
    }

    public void setMoveUpdateEventHandleFieldName(String moveUpdateEventHandleFieldName)
    {
        this.moveUpdateEventHandleFieldName = moveUpdateEventHandleFieldName;
    }

    private Boolean active;

    public Boolean getActive()
    {
        return this.active;
    }

    public void setActive(Boolean active)
    {
        this.active = active;
    }

    private Long offChainVersion;

    public Long getOffChainVersion()
    {
        return this.offChainVersion;
    }

    public void setOffChainVersion(Long offChainVersion)
    {
        this.offChainVersion = offChainVersion;
    }

    private Long formDefinitionFormSequenceId;

    public Long getFormDefinitionFormSequenceId()
    {
        return this.formDefinitionFormSequenceId;
    }

    public void setFormDefinitionFormSequenceId(Long formDefinitionFormSequenceId)
    {
        this.formDefinitionFormSequenceId = formDefinitionFormSequenceId;
    }

    private String createdBy;

    public String getCreatedBy()
    {
        return this.createdBy;
    }

    public void setCreatedBy(String createdBy)
    {
        this.createdBy = createdBy;
    }

    private OffsetDateTime createdAt;

    public OffsetDateTime getCreatedAt()
    {
        return this.createdAt;
    }

    public void setCreatedAt(OffsetDateTime createdAt)
    {
        this.createdAt = createdAt;
    }

    private String updatedBy;

    public String getUpdatedBy()
    {
        return this.updatedBy;
    }

    public void setUpdatedBy(String updatedBy)
    {
        this.updatedBy = updatedBy;
    }

    private OffsetDateTime updatedAt;

    public OffsetDateTime getUpdatedAt()
    {
        return this.updatedAt;
    }

    public void setUpdatedAt(OffsetDateTime updatedAt)
    {
        this.updatedAt = updatedAt;
    }


    public static class DtoConverter extends AbstractStateDtoConverter
    {
        public static Collection<String> collectionFieldNames = Arrays.asList(new String[]{});

        @Override
        protected boolean isCollectionField(String fieldName) {
            return CollectionUtils.collectionContainsIgnoringCase(collectionFieldNames, fieldName);
        }

        public FormPageDefinitionStateDto[] toFormPageDefinitionStateDtoArray(Iterable<FormPageDefinitionState> states) {
            return toFormPageDefinitionStateDtoList(states).toArray(new FormPageDefinitionStateDto[0]);
        }

        public List<FormPageDefinitionStateDto> toFormPageDefinitionStateDtoList(Iterable<FormPageDefinitionState> states) {
            ArrayList<FormPageDefinitionStateDto> stateDtos = new ArrayList();
            for (FormPageDefinitionState s : states) {
                FormPageDefinitionStateDto dto = toFormPageDefinitionStateDto(s);
                stateDtos.add(dto);
            }
            return stateDtos;
        }

        public FormPageDefinitionStateDto toFormPageDefinitionStateDto(FormPageDefinitionState state)
        {
            if(state == null) {
                return null;
            }
            FormPageDefinitionStateDto dto = new FormPageDefinitionStateDto();
            if (returnedFieldsContains("PageNumber")) {
                dto.setPageNumber(state.getPageNumber());
            }
            if (returnedFieldsContains("PageName")) {
                dto.setPageName(state.getPageName());
            }
            if (returnedFieldsContains("MoveStateTableFieldName")) {
                dto.setMoveStateTableFieldName(state.getMoveStateTableFieldName());
            }
            if (returnedFieldsContains("MoveStateStructName")) {
                dto.setMoveStateStructName(state.getMoveStateStructName());
            }
            if (returnedFieldsContains("MoveSubmitEventHandleFieldName")) {
                dto.setMoveSubmitEventHandleFieldName(state.getMoveSubmitEventHandleFieldName());
            }
            if (returnedFieldsContains("MoveUpdateEventHandleFieldName")) {
                dto.setMoveUpdateEventHandleFieldName(state.getMoveUpdateEventHandleFieldName());
            }
            if (returnedFieldsContains("Active")) {
                dto.setActive(state.getActive());
            }
            if (returnedFieldsContains("OffChainVersion")) {
                dto.setOffChainVersion(state.getOffChainVersion());
            }
            if (returnedFieldsContains("FormDefinitionFormSequenceId")) {
                dto.setFormDefinitionFormSequenceId(state.getFormDefinitionFormSequenceId());
            }
            if (returnedFieldsContains("CreatedBy")) {
                dto.setCreatedBy(state.getCreatedBy());
            }
            if (returnedFieldsContains("CreatedAt")) {
                dto.setCreatedAt(state.getCreatedAt());
            }
            if (returnedFieldsContains("UpdatedBy")) {
                dto.setUpdatedBy(state.getUpdatedBy());
            }
            if (returnedFieldsContains("UpdatedAt")) {
                dto.setUpdatedAt(state.getUpdatedAt());
            }
            return dto;
        }

    }
}

