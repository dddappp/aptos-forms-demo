// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.test.aptosformsdemo.aptos.contract.taskservice;

import org.test.aptosformsdemo.aptos.contract.repository.*;
import org.test.aptosformsdemo.aptos.contract.service.*;
import org.test.aptosformsdemo.aptos.contract.ContractConstants;
import org.test.aptosformsdemo.aptos.contract.AptosAccount;
import org.test.aptosformsdemo.aptos.contract.ContractModuleNameProvider;
import org.test.aptosformsdemo.aptos.contract.DefaultAptosFormsDemoCoin_claimer_1ModuleNameProvider;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import org.test.aptosformsdemo.domain.FormPageAndAddress;
import org.test.aptosformsdemo.aptos.contract.TestTenantizedIdFunctions;

@Service
public class UpdateAptosFormsDemoCoin_claimer_1StateTaskService {

    @Value("${aptos.contract.address}")
    private String aptosContractAddress;

    @Autowired
    private AptosAccountRepository aptosAccountRepository;

    @Autowired
    private AptosAptosFormsDemoCoin_claimer_1Service aptosAptosFormsDemoCoin_claimer_1Service;

    @Autowired
    private AptosFormsDemoCoin_claimer_1EventRepository aptosFormsDemoCoin_claimer_1EventRepository;

    @Autowired
    private AptosFormsDemoCoin_claimer_1EventService aptosFormsDemoCoin_claimer_1EventService;

    @Scheduled(fixedDelayString = "${aptos.contract.update-aptos-forms-demo-coin-claimer-1-states.fixed-delay:5000}")
    @Transactional
    public void updateAptosFormsDemoCoin_claimer_1States() {
        aptosFormsDemoCoin_claimer_1EventRepository.findByEventStatusIsNull().forEach(e -> {
            aptosAptosFormsDemoCoin_claimer_1Service.updateAptosFormsDemoCoin_claimer_1State(getContractModuleNameProvider(), getToFormPageAndAddressFunction(), e.getFormPageAndSignerAddress().getAddress());
            aptosFormsDemoCoin_claimer_1EventService.updateStatusToProcessed(e);
        });
    }

    private java.util.function.Function<String, FormPageAndAddress> getToFormPageAndAddressFunction() {
        return TestTenantizedIdFunctions.toFormPageAndAddressFunction(); // todo only for test
    }

    private ContractModuleNameProvider getContractModuleNameProvider() {
        // Note: This 'Default' implementation contains hard-coded names. A truly generalized service may not be appropriate to use it.
        DefaultAptosFormsDemoCoin_claimer_1ModuleNameProvider contractModuleNameProvider = new DefaultAptosFormsDemoCoin_claimer_1ModuleNameProvider();
        contractModuleNameProvider.setContractAddress(aptosContractAddress);
        contractModuleNameProvider.setStoreAccountAddress(getResourceAccountAddress());
        return contractModuleNameProvider;
    }

    private String getResourceAccountAddress() {
        return aptosAccountRepository.findById(ContractConstants.RESOURCE_ACCOUNT_ADDRESS)
                .map(AptosAccount::getAddress).orElse(null);
    }
}
