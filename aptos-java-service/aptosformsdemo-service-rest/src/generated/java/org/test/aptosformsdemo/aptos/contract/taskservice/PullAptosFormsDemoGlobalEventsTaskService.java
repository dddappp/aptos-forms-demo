// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.test.aptosformsdemo.aptos.contract.taskservice;

import org.test.aptosformsdemo.aptos.contract.service.AptosFormsDemoGlobalEventService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.stereotype.Service;

import org.springframework.beans.factory.annotation.Value;
import org.test.aptosformsdemo.aptos.contract.ContractConstants;
import org.test.aptosformsdemo.aptos.contract.AptosAccount;
import org.test.aptosformsdemo.aptos.contract.repository.AptosAccountRepository;
import org.test.aptosformsdemo.aptos.contract.ContractModuleNameProvider;
import org.test.aptosformsdemo.aptos.contract.DefaultAptosFormsDemoGlobalModuleNameProvider;
import org.test.aptosformsdemo.domain.FormAndAddress;
import org.test.aptosformsdemo.aptos.contract.TestTenantizedIdFunctions;

@Service
public class PullAptosFormsDemoGlobalEventsTaskService {

    @Value("${aptos.contract.address}")
    private String aptosContractAddress;

    @Autowired
    private AptosAccountRepository aptosAccountRepository;

    @Autowired
    private AptosFormsDemoGlobalEventService aptosFormsDemoGlobalEventService;

    @Scheduled(fixedDelayString = "${aptos.contract.pull-aptos-forms-demo-global-events.payment-123-vault-deposited.fixed-delay:5000}")
    public void pullPayment_123_VaultDepositedEvents() {
        aptosFormsDemoGlobalEventService.pullPayment_123_VaultDepositedEvents(getContractModuleNameProvider(), getToFormAndAddressFunction());
    }

    @Scheduled(fixedDelayString = "${aptos.contract.pull-aptos-forms-demo-global-events.payment-123-vault-withdrawn.fixed-delay:5000}")
    public void pullPayment_123_VaultWithdrawnEvents() {
        aptosFormsDemoGlobalEventService.pullPayment_123_VaultWithdrawnEvents(getContractModuleNameProvider(), getToFormAndAddressFunction());
    }

    @Scheduled(fixedDelayString = "${aptos.contract.pull-aptos-forms-demo-global-events.payment-123-vault-admin-withdrawn.fixed-delay:5000}")
    public void pullPayment_123_VaultAdminWithdrawnEvents() {
        aptosFormsDemoGlobalEventService.pullPayment_123_VaultAdminWithdrawnEvents(getContractModuleNameProvider(), getToFormAndAddressFunction());
    }

    private java.util.function.Function<String, FormAndAddress> getToFormAndAddressFunction() {
        return TestTenantizedIdFunctions.toFormAndAddressFunction(); // todo only for test
    }

    private ContractModuleNameProvider getContractModuleNameProvider() {
        // Note: This 'Default' implementation contains hard-coded names. A truly generalized service may not be appropriate to use it.
        DefaultAptosFormsDemoGlobalModuleNameProvider contractModuleNameProvider = new DefaultAptosFormsDemoGlobalModuleNameProvider();
        contractModuleNameProvider.setContractAddress(aptosContractAddress);
        contractModuleNameProvider.setStoreAccountAddress(getResourceAccountAddress());
        return contractModuleNameProvider;
    }

    private String getResourceAccountAddress() {
        return aptosAccountRepository.findById(ContractConstants.RESOURCE_ACCOUNT_ADDRESS)
                .map(AptosAccount::getAddress).orElse(null);
    }
}
