// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.test.aptosformsdemo.aptos.contract.service;


import com.github.wubuku.aptos.bean.AccountResource;
import com.github.wubuku.aptos.utils.*;
import org.test.aptosformsdemo.aptos.contract.AptosAccount;
import org.test.aptosformsdemo.aptos.contract.ContractConstants;
import org.test.aptosformsdemo.aptos.contract.DomainBeanUtils;
import org.test.aptosformsdemo.aptos.contract.repository.AptosAccountRepository;
import org.test.aptosformsdemo.domain.mainform.*;
import org.test.aptosformsdemo.domain.*;
import org.test.aptosformsdemo.aptos.contract.MainForm;

import java.io.IOException;
import java.math.*;
import java.util.*;
import java.util.function.*;


public class AptosMainFormStateRetriever {

    private NodeApiClient aptosNodeApiClient;

    private String aptosContractAddress;

    private AptosAccountRepository aptosAccountRepository;

    private Function<String, MainFormState.MutableMainFormState> mainFormStateFactory;


    public AptosMainFormStateRetriever(NodeApiClient aptosNodeApiClient,
                                    String aptosContractAddress,
                                    AptosAccountRepository aptosAccountRepository,
                                    Function<String, MainFormState.MutableMainFormState> mainFormStateFactory
    ) {
        this.aptosNodeApiClient = aptosNodeApiClient;
        this.aptosContractAddress = aptosContractAddress;
        this.aptosAccountRepository = aptosAccountRepository;
        this.mainFormStateFactory = mainFormStateFactory;
    }

    public MainFormState retrieveMainFormState(String accountAddress) {
        String resourceAccountAddress = getResourceAccountAddress();
        AccountResource<MainForm.Tables> accountResource;
        try {
            accountResource = aptosNodeApiClient.getAccountResource(resourceAccountAddress,
                    this.aptosContractAddress + "::" + ContractConstants.MAIN_FORM_MODULE_TABLES,
                    MainForm.Tables.class,
                    null);
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
        String tableHandle = accountResource.getData().getMainFormTable().getHandle();
        MainForm mainForm;
        try {
            mainForm = aptosNodeApiClient.getTableItem(
                    tableHandle,
                    ContractConstants.toNumericalAddressType(ContractConstants.MAIN_FORM_ID_TYPE, this.aptosContractAddress),
                    this.aptosContractAddress + "::" + ContractConstants.MAIN_FORM_MODULE_MAIN_FORM,
                    accountAddress,
                    MainForm.class,
                    null
            );
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
        return toMainFormState(mainForm);
    }

    private MainFormState toMainFormState(MainForm mainForm) {
        MainFormState.MutableMainFormState mainFormState = mainFormStateFactory.apply(mainForm.getAccountAddress());
        mainFormState.setVersion(mainForm.getVersion());
        mainFormState.setFr_5pqi(mainForm.getFr_5pqi());
        mainFormState.setFr_duif(new HashSet<>(Arrays.asList(mainForm.getFr_duif())));
        mainFormState.setFr_6i34(new HashSet<>(Arrays.asList(mainForm.getFr_6i34())));
        mainFormState.setFr_8xjs(mainForm.getFr_8xjs());
        mainFormState.setFr_9c3f(mainForm.getFr_9c3f());
        mainFormState.setFr_4ok6(mainForm.getFr_4ok6());
        mainFormState.setFr_b3ub(mainForm.getFr_b3ub());
        mainFormState.setFr_1z7o(mainForm.getFr_1z7o());
        mainFormState.setFr_6f68(mainForm.getFr_6f68());
        mainFormState.setFr_gh3o(new HashSet<>(Arrays.asList(mainForm.getFr_gh3o())));
        mainFormState.setFr_fbba(new HashSet<>(Arrays.asList(mainForm.getFr_fbba())));
        mainFormState.setFr_hhzp(mainForm.getFr_hhzp());
        mainFormState.setSingle_text1(mainForm.getSingle_text1());
        return mainFormState;
    }

    private String getResourceAccountAddress() {
        return aptosAccountRepository.findById(ContractConstants.RESOURCE_ACCOUNT_ADDRESS)
                .map(AptosAccount::getAddress).orElse(null);
    }

}

