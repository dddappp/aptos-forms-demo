// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.test.aptosformsdemo.aptos.contract.service;


import com.github.wubuku.aptos.bean.AccountResource;
import com.github.wubuku.aptos.utils.*;
import org.test.aptosformsdemo.aptos.contract.AptosAccount;
import org.test.aptosformsdemo.aptos.contract.ContractConstants;
import org.test.aptosformsdemo.aptos.contract.DomainBeanUtils;
import org.test.aptosformsdemo.aptos.contract.repository.AptosAccountRepository;
import org.test.aptosformsdemo.domain.aptosformsdemomainform.*;
import org.test.aptosformsdemo.domain.*;
import org.test.aptosformsdemo.aptos.contract.AptosFormsDemoMainForm;

import java.io.IOException;
import java.math.*;
import java.util.*;
import java.util.function.*;


public class AptosAptosFormsDemoMainFormStateRetriever {

    private NodeApiClient aptosNodeApiClient;

    private String aptosContractAddress;

    private AptosAccountRepository aptosAccountRepository;

    private Function<String, AptosFormsDemoMainFormState.MutableAptosFormsDemoMainFormState> aptosFormsDemoMainFormStateFactory;


    public AptosAptosFormsDemoMainFormStateRetriever(NodeApiClient aptosNodeApiClient,
                                    String aptosContractAddress,
                                    AptosAccountRepository aptosAccountRepository,
                                    Function<String, AptosFormsDemoMainFormState.MutableAptosFormsDemoMainFormState> aptosFormsDemoMainFormStateFactory
    ) {
        this.aptosNodeApiClient = aptosNodeApiClient;
        this.aptosContractAddress = aptosContractAddress;
        this.aptosAccountRepository = aptosAccountRepository;
        this.aptosFormsDemoMainFormStateFactory = aptosFormsDemoMainFormStateFactory;
    }

    public AptosFormsDemoMainFormState retrieveAptosFormsDemoMainFormState(String signerAddress) {
        String resourceAccountAddress = getResourceAccountAddress();
        AccountResource<AptosFormsDemoMainForm.Tables> accountResource;
        try {
            accountResource = aptosNodeApiClient.getAccountResource(resourceAccountAddress,
                    this.aptosContractAddress + "::" + ContractConstants.APTOS_FORMS_DEMO_MAIN_FORM_MODULE_TABLES,
                    AptosFormsDemoMainForm.Tables.class,
                    null);
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
        String tableHandle = accountResource.getData().getAptosFormsDemoMainFormTable().getHandle();
        AptosFormsDemoMainForm aptosFormsDemoMainForm;
        try {
            aptosFormsDemoMainForm = aptosNodeApiClient.getTableItem(
                    tableHandle,
                    ContractConstants.toNumericalAddressType(ContractConstants.APTOS_FORMS_DEMO_MAIN_FORM_ID_TYPE, this.aptosContractAddress),
                    this.aptosContractAddress + "::" + ContractConstants.APTOS_FORMS_DEMO_MAIN_FORM_MODULE_APTOS_FORMS_DEMO_MAIN_FORM,
                    signerAddress,
                    AptosFormsDemoMainForm.class,
                    null
            );
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
        return toAptosFormsDemoMainFormState(aptosFormsDemoMainForm);
    }

    private AptosFormsDemoMainFormState toAptosFormsDemoMainFormState(AptosFormsDemoMainForm aptosFormsDemoMainForm) {
        AptosFormsDemoMainFormState.MutableAptosFormsDemoMainFormState aptosFormsDemoMainFormState = aptosFormsDemoMainFormStateFactory.apply(aptosFormsDemoMainForm.getSignerAddress());
        aptosFormsDemoMainFormState.setVersion(aptosFormsDemoMainForm.getVersion());
        aptosFormsDemoMainFormState.setDynamicProperties(aptosFormsDemoMainForm.getDynamicProperties());
        return aptosFormsDemoMainFormState;
    }

    private String getResourceAccountAddress() {
        return aptosAccountRepository.findById(ContractConstants.RESOURCE_ACCOUNT_ADDRESS)
                .map(AptosAccount::getAddress).orElse(null);
    }

}

