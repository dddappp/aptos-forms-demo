// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.test.aptosformsdemo.config;

import org.test.aptosformsdemo.domain.aptosformsdemomainform.*;
import org.test.aptosformsdemo.domain.*;
import org.test.aptosformsdemo.domain.aptosformsdemomainform.hibernate.*;
import org.test.aptosformsdemo.specialization.AggregateEventListener;
import org.test.aptosformsdemo.specialization.EventStore;
import org.test.aptosformsdemo.specialization.IdGenerator;
import org.test.aptosformsdemo.specialization.ReadOnlyProxyGenerator;
import org.hibernate.SessionFactory;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

@Configuration
public class AggregatesHibernateConfig {


    @Bean
    public AptosFormsDemoMainFormStateRepository aptosFormsDemoMainFormStateRepository(
            SessionFactory hibernateSessionFactory,
            ReadOnlyProxyGenerator stateReadOnlyProxyGenerator
    ) {
        HibernateAptosFormsDemoMainFormStateRepository repository = new HibernateAptosFormsDemoMainFormStateRepository();
        repository.setSessionFactory(hibernateSessionFactory);
        repository.setReadOnlyProxyGenerator(stateReadOnlyProxyGenerator);
        return repository;
    }

    @Bean
    public AptosFormsDemoMainFormStateQueryRepository aptosFormsDemoMainFormStateQueryRepository(
            SessionFactory hibernateSessionFactory,
            ReadOnlyProxyGenerator stateReadOnlyProxyGenerator
    ) {
        HibernateAptosFormsDemoMainFormStateQueryRepository repository = new HibernateAptosFormsDemoMainFormStateQueryRepository();
        repository.setSessionFactory(hibernateSessionFactory);
        repository.setReadOnlyProxyGenerator(stateReadOnlyProxyGenerator);
        return repository;
    }

    @Bean
    public HibernateAptosFormsDemoMainFormEventStore aptosFormsDemoMainFormEventStore(SessionFactory hibernateSessionFactory) {
        HibernateAptosFormsDemoMainFormEventStore eventStore = new HibernateAptosFormsDemoMainFormEventStore();
        eventStore.setSessionFactory(hibernateSessionFactory);
        return eventStore;
    }

    @Bean
    public AbstractAptosFormsDemoMainFormApplicationService.SimpleAptosFormsDemoMainFormApplicationService aptosFormsDemoMainFormApplicationService(
            @Qualifier("aptosFormsDemoMainFormEventStore") EventStore aptosFormsDemoMainFormEventStore,
            AptosFormsDemoMainFormStateRepository aptosFormsDemoMainFormStateRepository,
            AptosFormsDemoMainFormStateQueryRepository aptosFormsDemoMainFormStateQueryRepository
    ) {
        AbstractAptosFormsDemoMainFormApplicationService.SimpleAptosFormsDemoMainFormApplicationService applicationService = new AbstractAptosFormsDemoMainFormApplicationService.SimpleAptosFormsDemoMainFormApplicationService(
                aptosFormsDemoMainFormEventStore,
                aptosFormsDemoMainFormStateRepository,
                aptosFormsDemoMainFormStateQueryRepository
        );
        return applicationService;
    }


}
