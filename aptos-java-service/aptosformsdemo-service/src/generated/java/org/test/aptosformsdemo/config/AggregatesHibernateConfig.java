// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.test.aptosformsdemo.config;

import org.test.aptosformsdemo.domain.mainform.*;
import org.test.aptosformsdemo.domain.*;
import org.test.aptosformsdemo.domain.mainform.hibernate.*;
import org.test.aptosformsdemo.specialization.AggregateEventListener;
import org.test.aptosformsdemo.specialization.EventStore;
import org.test.aptosformsdemo.specialization.IdGenerator;
import org.test.aptosformsdemo.specialization.ReadOnlyProxyGenerator;
import org.hibernate.SessionFactory;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

@Configuration
public class AggregatesHibernateConfig {


    @Bean
    public MainFormStateRepository mainFormStateRepository(
            SessionFactory hibernateSessionFactory,
            ReadOnlyProxyGenerator stateReadOnlyProxyGenerator
    ) {
        HibernateMainFormStateRepository repository = new HibernateMainFormStateRepository();
        repository.setSessionFactory(hibernateSessionFactory);
        repository.setReadOnlyProxyGenerator(stateReadOnlyProxyGenerator);
        return repository;
    }

    @Bean
    public MainFormStateQueryRepository mainFormStateQueryRepository(
            SessionFactory hibernateSessionFactory,
            ReadOnlyProxyGenerator stateReadOnlyProxyGenerator
    ) {
        HibernateMainFormStateQueryRepository repository = new HibernateMainFormStateQueryRepository();
        repository.setSessionFactory(hibernateSessionFactory);
        repository.setReadOnlyProxyGenerator(stateReadOnlyProxyGenerator);
        return repository;
    }

    @Bean
    public HibernateMainFormEventStore mainFormEventStore(SessionFactory hibernateSessionFactory) {
        HibernateMainFormEventStore eventStore = new HibernateMainFormEventStore();
        eventStore.setSessionFactory(hibernateSessionFactory);
        return eventStore;
    }

    @Bean
    public AbstractMainFormApplicationService.SimpleMainFormApplicationService mainFormApplicationService(
            @Qualifier("mainFormEventStore") EventStore mainFormEventStore,
            MainFormStateRepository mainFormStateRepository,
            MainFormStateQueryRepository mainFormStateQueryRepository
    ) {
        AbstractMainFormApplicationService.SimpleMainFormApplicationService applicationService = new AbstractMainFormApplicationService.SimpleMainFormApplicationService(
                mainFormEventStore,
                mainFormStateRepository,
                mainFormStateQueryRepository
        );
        return applicationService;
    }


}
